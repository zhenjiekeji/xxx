<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="EctableColumnDetail">

    <resultMap id="EctableColumnDetailResult"
        type="com.uk.sec.framework.ectable.model.EctableColumnDetail">
        <result property="id" column="ecd_id"/>
        <result property="columnName" column="ecd_columnName"/>
        <result property="orderNum" column="ecd_orderNum"/>
        <result property="showStatus" column="ecd_showStatus"/>
        <result property="userId" column="ecd_userId"/>
        <result property="viewType" column="ecd_viewType"/>
        <result property="displayName" column="ecd_displayName"/>
        <result property="ectableColumnId" column="ecd_ectableColumnId"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="ectableColumnDetailColumns">
        <![CDATA[
            ECTABLE_COLUMN_DETAIL.ID as ecd_id,
            ECTABLE_COLUMN_DETAIL.COLUMN_NAME as ecd_columnName,
            ECTABLE_COLUMN_DETAIL.ORDER_NUM as ecd_orderNum,
            ECTABLE_COLUMN_DETAIL.SHOW_STATUS as ecd_showStatus,
            ECTABLE_COLUMN_DETAIL.USER_ID as ecd_userId,
            ECTABLE_COLUMN_DETAIL.VIEW_TYPE as ecd_viewType,
            ECTABLE_COLUMN_DETAIL.DISPLAY_NAME as ecd_displayName,
            ECTABLE_COLUMN_DETAIL.ECTABLE_COLUMN_ID as ecd_ectableColumnId
        ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert"
        parameterType="com.uk.sec.framework.ectable.model.EctableColumnDetail">
        <selectKey resultType="java.lang.String" order="BEFORE"
            keyProperty="id">
            SELECT sys_guid() AS ID FROM DUAL
        </selectKey>
        <![CDATA[
        INSERT INTO
        ECTABLE_COLUMN_DETAIL (
            ID ,
            COLUMN_NAME ,
            ORDER_NUM ,
            SHOW_STATUS ,
            USER_ID ,
            VIEW_TYPE ,
            DISPLAY_NAME ,
            ECTABLE_COLUMN_ID
        ) VALUES (
            #{id,jdbcType=VARCHAR} ,
            #{columnName,jdbcType=VARCHAR} ,
            #{orderNum,jdbcType=DECIMAL} ,
            #{showStatus,jdbcType=DECIMAL} ,
            #{userId,jdbcType=VARCHAR} ,
            #{viewType,jdbcType=VARCHAR} ,
            #{displayName,jdbcType=VARCHAR} ,
            #{ectableColumnId,jdbcType=VARCHAR}
        )
    ]]>
        <!--
            oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL
            DB2: order="BEFORE"" values nextval for sequenceName
            <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
            SELECT sequenceName.nextval AS ID FROM DUAL
            </selectKey>
        -->
    </insert>

    <update id="update"
        parameterType="com.uk.sec.framework.ectable.model.EctableColumnDetail">
        <![CDATA[
        UPDATE ECTABLE_COLUMN_DETAIL SET
            COLUMN_NAME = #{columnName,jdbcType=VARCHAR} ,
            ORDER_NUM = #{orderNum,jdbcType=DECIMAL} ,
            SHOW_STATUS = #{showStatus,jdbcType=DECIMAL} ,
            USER_ID = #{userId,jdbcType=VARCHAR} ,
            VIEW_TYPE = #{viewType,jdbcType=VARCHAR} ,
            DISPLAY_NAME = #{displayName,jdbcType=VARCHAR} ,
            ECTABLE_COLUMN_ID = #{ectableColumnId,jdbcType=VARCHAR}
        WHERE
            ID = #{id}
    ]]>
    </update>

    <delete id="delete" parameterType="java.lang.String">
        <![CDATA[
        delete from ECTABLE_COLUMN_DETAIL where
        ID = #{id}
    ]]>
    </delete>

    <select id="getById" parameterType="java.lang.String"
        resultMap="EctableColumnDetailResult">
        select
        <include refid="ectableColumnDetailColumns" />
        <![CDATA[
            from ECTABLE_COLUMN_DETAIL
            where
                ID = #{id}
        ]]>
    </select>

    <sql id="ectableColumnDetailDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
            <if
                test="@Ognl@isNotBlank(id)">
                and ECTABLE_COLUMN_DETAIL.ID = #{id}            </if>
            <if
                test="@Ognl@isNotBlank(columnName)">
                and ECTABLE_COLUMN_DETAIL.COLUMN_NAME = #{columnName,javaType=String,jdbcType=VARCHAR}            </if>
            <if
                test="@Ognl@isNotBlank(orderNum)">
                and ECTABLE_COLUMN_DETAIL.ORDER_NUM = #{orderNum}            </if>
            <if
                test="@Ognl@isNotBlank(showStatus)">
                and ECTABLE_COLUMN_DETAIL.SHOW_STATUS = #{showStatus}            </if>
            <if
                test="@Ognl@isNotBlank(userId)">
                and ECTABLE_COLUMN_DETAIL.USER_ID = #{userId}            </if>
            <if
                test="@Ognl@isNotBlank(viewType)">
                and ECTABLE_COLUMN_DETAIL.VIEW_TYPE = #{viewType}            </if>
            <if
                test="@Ognl@isNotBlank(displayName)">
                and ECTABLE_COLUMN_DETAIL.DISPLAY_NAME = #{displayName}            </if>
            <if
                test="@Ognl@isNotBlank(ectableColumnId)">
                and ECTABLE_COLUMN_DETAIL.ECTABLE_COLUMN_ID = #{ectableColumnId}            </if>
        </where>
    </sql>

    <select id="count" resultType="long">
        select count(*) from ECTABLE_COLUMN_DETAIL
        <include refid="ectableColumnDetailDynamicWhere" />
    </select>

    <!--
        分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
        因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="EctableColumnDetailResult">
        select
        <include refid="ectableColumnDetailColumns" />
        from ECTABLE_COLUMN_DETAIL
        <include refid="ectableColumnDetailDynamicWhere" />
        <if test="@Ognl@isNotEmpty(sortColumns)">
            ORDER BY ${sortColumns}
        </if>
    </select>

    <select id="findAll"
        parameterType="com.uk.sec.framework.ectable.model.EctableColumnDetail"
        resultMap="EctableColumnDetailResult">
        select
        <include refid="ectableColumnDetailColumns" />
        from ECTABLE_COLUMN_DETAIL
        <include refid="ectableColumnDetailDynamicWhere" />
        ORDER BY ECTABLE_COLUMN_DETAIL.SHOW_STATUS DESC,ECTABLE_COLUMN_DETAIL.ORDER_NUM ASC
    </select>

    <select id="findAllByMap"
        resultMap="EctableColumnDetailResult">
        select
        <include refid="ectableColumnDetailColumns" />
        from ECTABLE_COLUMN_DETAIL
        <include refid="ectableColumnDetailDynamicWhere" />
        ORDER BY ECTABLE_COLUMN_DETAIL.SHOW_STATUS DESC,ECTABLE_COLUMN_DETAIL.ORDER_NUM ASC
    </select>

    <delete id="deleteByParams">
        delete from ECTABLE_COLUMN_DETAIL where
        <include refid="ectableColumnDetailDynamicWhere" />
    </delete>

</mapper>
